{     app.beginUndoGroup("Ma Code");  var startingPoint=[100,40];var myFormat=[];var currentX=startingPoint[0];var currentY=startingPoint[1];var columnWidthDefined=600;var columnWidth=columnWidthDefined+startingPoint[0];var leading=60;var trackingWidth=0;var wordSpaceWidth=20;var tabWidth= wordSpaceWidth*5;var eachLetter=20;var dict= {"a": [0,],"b": [1,],"c": [2,],"d": [3,],"e": [4,],"f": [5,],"g": [6,],"h": [7,],"i": [8,],"j": [9,],"k": [10,],"l": [11,],"m": [12,],"n": [13,],"o": [14,],"p": [15,],"q": [16,],"r": [17,],"s": [18,],"t": [19,],"u": [20,],"v": [21,],"w": [22,],"x": [23,],"y": [24,],"z": [25,]};var myString2="s=thisLayer;\nt=time-inPoint;\ntheWidth=s.sourceRectAtTime(t,false).width;\ntheHeight=s.sourceRectAtTime(t,false).height;\n\ntheLeft=s.sourceRectAtTime(t,false).left;\ntheTop=s.sourceRectAtTime(t,false).top;\n\n[theWidth, theHeight];"var myString3="s=thisLayer;\nt=time-inPoint;\ntheWidth=s.sourceRectAtTime(t,false).width;\ntheHeight=s.sourceRectAtTime(t,false).height;\n\ntheLeft=s.sourceRectAtTime(t,false).left;\ntheTop=s.sourceRectAtTime(t,false).top;\n\n[theLeft,theTop+theHeight];" var myComp = app.project.activeItem; var selectedLayers = myComp.selectedLayers;var myOpts="abcdefghijklmnopqrstuvwxyz";myOpts=myOpts.split("");//fill dictionary with Widthsfor (m = 0; m<selectedLayers.length; m++)  {selectedLayers[m].property("position").expression=myString2;var transfer = selectedLayers[m].property("position").valueAtTime(0,false);var myScale= (selectedLayers[m].property("scale").valueAtTime(0,true)[0])/100;	var whatToAdd = transfer[0]*myScale;  selectedLayers[m].property("position").expression="";  selectedLayers[m].property("anchorPoint").expression=myString3;	dict[myOpts[m].toString()][1]= whatToAdd;    }//alert(dict);function processRecon(myLineLength2,theWord2){       var myIndiChara2=theWord2.split("");       //alert(myIndiChara2);                        for (cc = 0; cc<myIndiChara2.length; cc++)                  {                                                  try {                                    myLineLength2 += parseInt(dict[(myIndiChara2[cc].toString().toLowerCase())][1]) +trackingWidth;                                    //alert(myLineLength2);                            }                            catch(error) {                                //alert("error")                                if (myIndiChara2[cc].toString().toLowerCase()=="*")                                {                                    //myLineLength2 += tabWidth;                                    }                                else if (myIndiChara2[cc].toString().toLowerCase()=="$")                                        {                                            //myLineLength2+=tabWidth;                                            }                                   else                                        {                                            }                                                                                //                            }                    }                    //alert(myLineLength2);                return myLineLength2;        }function processCode(currentX,currentY,theWord){var currentXX=currentX;var currentYY=currentY;       var myIndiChara=theWord.split("");                        for (bb = 0; bb<myIndiChara.length; bb++)                  {                            try {                                                                var myActualWidth=parseInt(dict[(myIndiChara[bb].toString().toLowerCase())][1])+trackingWidth;                                var addThisOne=selectedLayers[parseInt(dict[(myIndiChara[bb].toString().toLowerCase())][0])].duplicate();                                addThisOne.property("position").setValue([currentXX,currentYY]);                                addThisOne.name=myIndiChara[bb].toString();                                addThisOne.label=12;                                addThisOne.moveToEnd();              // var newTextt= myComp.layers.addText(currentPosition.toString())              // newTextt.property("position").setValue(currentPosition);             //  newTextt.moveToEnd();              //alert(currentPosition);                                //alter currentPosition                                //currentPosition=[currentPosition[0]+ myActualWidth+trackingWidth, currentPosition[1]];                                currentXX+=myActualWidth+trackingWidth;                            }                            catch(error) {                                        if (myIndiChara[bb].toString().toLowerCase()=="*")                                        {                                            myLineLength=startingPoint[0];                                            myLineLength+=tabWidth;                                            //added the above as a guess as to what could fix the alignment issues                                            currentXX = startingPoint[0];                                            currentXX+=tabWidth;                                            }                                                                                else if (myIndiChara[bb].toString().toLowerCase()=="$")                                        {                                            myLineLength=startingPoint[0];                                            myLineLength+=tabWidth;                                            //added the above as a guess as to what could fix the alignment issues                                            currentXX = startingPoint[0];                                            currentXX +=tabWidth;                                            currentYY += (leading*2);                                            }                                                                                else{                                            }                                                                                                                                                    }                    }                return [currentXX,currentYY];                                }var myString='Nellie Connally, the First Lady of Texas, turned to Kennedy, who was sitting behind her, and commented, "Mr. President, you cant say Dallas doesnt love you". Kennedys reply – "No, you certainly cant" – were his last words.';var myLineLength = startingPoint[0];//alert(myLineLength);var myWords=myString.split(" ");//alert(myWords);for (aa = 0; aa<myWords.length; aa++)  {                    //find Line length for each word added on                  myLineLength= processRecon(myLineLength,myWords[aa]);                  var myFigures=[];                                    //alert("gotem");                                      if (myLineLength<= columnWidth)                    {                        //currentPosition stays the same                        myFigures= processCode(currentX,currentY,myWords[aa])                        currentX = myFigures[0];                        myLineLength+= wordSpaceWidth;                    }                    else                    {                                                            //alert("cued"+myLineLength);                        //currentPosition changes                    myLineLength= startingPoint[0];                                                            //alert("resetcued"+myLineLength);                    currentX= startingPoint[0],                    currentY+=leading;                    myFigures= processCode(currentX,currentY,myWords[aa])                    currentX=myFigures[0];                    currentY=myFigures[1];                                            }                                                //add space between words               //var newTextt= myComp.layers.addText(currentPosition.toString())               //newTextt.property("position").setValue(currentPosition);              // newTextt.moveToEnd();              //alert(currentPosition);                currentX+= wordSpaceWidth;                currentY=myFigures[1];                                         }  app.endUndoGroup();    }